---
grafana:
  adminPassword: # admin password
  persistence:
    enabled: true
    existingClaim: monitor-stack-grafana
  service:
    type: NodePort
    nodePort: 32001

kube-state-metrics:
  nodeSelector:
    kubernetes.io/hostname: namenode   #имя ноды мониторинга

prometheusOperator:
  nodeSelector:
    kubernetes.io/hostname: namenode   #имя ноды мониторинга
  admissionWebhooks:
    patch:
      nodeSelector:
        kubernetes.io/hostname: namenode   #имя ноды мониторинга

prometheus:
  service:
    type: NodePort
    nodePort: 32090
  prometheusSpec:
    retention: 90d      #время хранения метрик
    externalLabels:
      stand: name                     #имя стенда для добавления к алерту
    externalUrl: http://IP:32090      #ip мастера стенда для добавления ссылки на prometheus в алерт
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "100Gi"
          selector:
            matchExpressions:
              - key: app.kubernetes.io/storage
                operator: In
                values:
                  - monitor-stack-prometheus
          storageClassName: local-storage
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false

alertmanager:
  enabled: true
  service:
    type: NodePort
    nodePort: 32093
  alertmanagerSpec:
    nodeSelector:
      kubernetes.io/hostname: #имя ноды мониторинга
  config:
    global:
      resolve_timeout: 1m
    route:
      group_by: ["alertname", "service", "instance", "severity"]
      group_wait: 15s
      group_interval: 5m
      repeat_interval: 1y
      receiver: 'zulip'      #корпоративный self-hosted messenger
      routes:
      - matchers:
        - severity=~"error|critical"
        receiver: 'zulip'
        continue: false
      - matchers:
        - severity=~"warning|info|none"
        receiver: 'slack-notifications'
        continue: false
    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - api_url: https://hooks.slack.com/services/your_url
        channel: "#monitoring"      #созданный канал
        username: '{{ template "slack.default.username" . }}'
        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
        title: '{{ template "slack.default.title" . }}'
        title_link: '{{ template "slack.default.titlelink" . }}'
        text: |-
          {{ range .Alerts }}
            *Project:* `Stand-`
             *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
            *Description:* {{ .Annotations.description }}
            *Details:*
            {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
        fallback: '{{ template "slack.default.fallback" . }}'
        icon_emoji: '{{ template "slack.default.iconemoji" . }}'
        icon_url: '{{ template "slack.default.iconurl" . }}'
        send_resolved: false
    - name: 'zulip'
      webhook_configs:
      - url: 'https://zulip.com/api/v1/external/alertmanager?api_key=your_key&stream=monitoring&topic=kubernetes&desc=summary'      #созданный канал и тема в zulip
        send_resolved: false
    templates:
      - '/etc/alertmanager/config/*.tmpl'

  templateFiles: {}

  template_1.tmpl: |-
    {{ define "__alertmanager" }}Cluster: CLUSTER_NAME{{ end }}
    {{ define "__alertmanagerURL" }}{{ .ExternalURL }}/#/alerts?receiver={{ .Receiver }}{{ end }}

    {{ define "__subject" }}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.SortedPairs.Values | join " " }} {{ if gt (len .CommonLabels) (len .GroupLabels) }}({{ with .CommonLabels.Remove .GroupLabels.Names }}{{ .Values | join " " }}{{ end }}){{ end }}{{ end }}
    {{ define "__description" }}{{ end }}

    {{ define "__text_alert_list" }}{{ range . }}Labels:
    {{ range .Labels.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}Annotations:
    {{ range .Annotations.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}Source: {{ .GeneratorURL }}
    {{ end }}{{ end }}

    {{ define "slack.default.title" }}{{ template "__subject" . }}{{ end }}
    {{ define "slack.default.username" }}{{ template "__alertmanager" . }}{{ end }}
    {{ define "slack.default.fallback" }}{{ template "slack.default.title" . }} | {{ template "slack.default.titlelink" . }}{{ end }}
    {{ define "slack.default.titlelink" }}{{ template "__alertmanagerURL" . }}{{ end }}
    {{ define "slack.default.pretext" }}{{ end }}
    {{ define "slack.default.iconemoji" }}{{ end }}
    {{ define "slack.default.iconurl" }}{{ end }}
    {{ define "slack.default.text" }}{{ end }}
    {{ define "slack.default.footer" }}{{ end }}
